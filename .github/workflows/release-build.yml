name: Release APK

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-linux-android
          override: true

      - name: Install cargo-ndk
        run: |
          cargo install cargo-ndk
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Flutter Packages Get
        working-directory: ./flutter
        run: flutter pub get

      - name: Build Rust Bridge
        working-directory: ./flutter
        run: |
          dart pub global activate flutter_rust_bridge
          dart run flutter_rust_bridge:build

      - name: Analyze
        working-directory: ./flutter
        run: flutter analyze

      - name: Test
        working-directory: ./flutter
        run: flutter test

      - name: Setup Keystore
        run: |
          mkdir -p ./flutter/android/app
          echo "$KEYSTORE_BASE64" | base64 --decode > ./flutter/android/app/sprout-release.keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Configure Signing
        run: |
          cat >> ./flutter/android/app/key.properties << EOF
          storePassword=${{ secrets.KEYSTORE_STORE_PASS }}
          keyPassword=${{ secrets.KEYSTORE_KEY_PASS }}
          keyAlias=${{ secrets.KEYSTORE_KEY_ALIAS }}
          storeFile=sprout-release.keystore
          EOF
        working-directory: ./flutter

      - name: Build Release APK
        working-directory: ./flutter
        run: flutter build apk --release --obfuscate --split-debug-info=./build/symbols

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: flutter/build/app/outputs/flutter-apk/app-release.apk

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Sprout ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: flutter/build/app/outputs/flutter-apk/app-release.apk
          asset_name: Sprout-${{ github.ref_name }}.apk
          tag: ${{ github.ref_name }}
          overwrite: true
